/*
 * Created on 2022-06-09 ( Date ISO 2022-06-09 - Time 21:05:06 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.cs.speedtest.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cs.speedtest.entities.GatewayDevice;
import com.cs.speedtest.repository.GatewayDeviceRepository;

/**
 * Spring persistence service for "GatewayDevice" <br>
 * 
 * @author Telosys (http://www.telosys.org/) version 3.3.0
 */
@Service

public class GatewayDevicePersistenceService {

	@Autowired
	private GatewayDeviceRepository gatewayDeviceRepository;
	// @Autowired
	// private GatewayDeviceMapper gatewayDeviceMapper;

	public GatewayDevice findById(String guid) {

		Optional<GatewayDevice> optionalEntity = gatewayDeviceRepository.findById(guid);
		if (optionalEntity.isPresent()) {
			return optionalEntity.get();
		}
		return null;

	}

	public List<GatewayDevice> findAll() {
		// return mapper.mapEntityToRecord(gatewayDeviceRepository.findAll());

		List<GatewayDevice> entities = gatewayDeviceRepository.findAll();

		return entities;

	}

	public long countAll() {
		return gatewayDeviceRepository.count();
	}

	public GatewayDevice save(GatewayDevice record) {
//		return mapper.map(gatewayDeviceRepository.save(mapper.map(record)));
		GatewayDevice saved = gatewayDeviceRepository.save(record);
		return record;

	}

	public boolean update(GatewayDevice record) {

		if (exists(record)) {
			gatewayDeviceRepository.save(record);
			return true;
		}
		return false;
	}

	public GatewayDevice create(GatewayDevice record) {
		GatewayDevice saved = gatewayDeviceRepository.save(record);
		return saved;

	}

	public boolean deleteById(String guid) {
		final Optional<GatewayDevice> optinalEntity = gatewayDeviceRepository.findById(guid);
		if (!optinalEntity.isPresent()) {
			return false;
		}

		else {
			gatewayDeviceRepository.delete(optinalEntity.get());
			return true;
		}
	}

	public boolean delete(GatewayDevice record) {
		if (record == null) {
			return false;
		}
		return deleteById(record.getGuid());

	}

	public boolean exists(String guid) {
		return gatewayDeviceRepository.findById(guid).isPresent();
	}

	public boolean exists(GatewayDevice record) {
		return record == null ? false : gatewayDeviceRepository.findById(record.getGuid()).isPresent();
	}

}
