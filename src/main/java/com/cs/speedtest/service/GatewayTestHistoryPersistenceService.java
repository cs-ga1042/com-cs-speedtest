/*
 * Created on 2022-06-09 ( Date ISO 2022-06-09 - Time 21:05:06 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.cs.speedtest.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cs.speedtest.entities.GatewayTestHistory;
import com.cs.speedtest.repository.GatewayTestHistoryRepository;


/**
 * Spring persistence service for "GatewayTestHistory" <br>
 * @author Telosys (http://www.telosys.org/) version 3.3.0
 */
@Service

public class GatewayTestHistoryPersistenceService  {

	@Autowired
	private GatewayTestHistoryRepository gatewayTestHistoryRepository;
	//@Autowired
	//private GatewayTestHistoryMapper gatewayTestHistoryMapper;
	
	
	public GatewayTestHistory findById(String guid) {

		Optional<GatewayTestHistory> optionalEntity = gatewayTestHistoryRepository.findById(guid);
		if ( optionalEntity.isPresent() ) {
			return optionalEntity.get();
		}
		return null ;

	}

	
	public List<GatewayTestHistory> findAll() {
		//return mapper.mapEntityToRecord(gatewayTestHistoryRepository.findAll());

		List<GatewayTestHistory> entities = gatewayTestHistoryRepository.findAll() ;
		
		return entities ;

	}

	
	public long countAll() {
		return gatewayTestHistoryRepository.count();
	}

	
	public GatewayTestHistory save(GatewayTestHistory record) {
//		return mapper.map(gatewayTestHistoryRepository.save(mapper.map(record)));
		GatewayTestHistory saved = gatewayTestHistoryRepository.save( record );
		return saved;

	}

	
	public boolean update(GatewayTestHistory record) {

		if ( exists(record) ) {
			gatewayTestHistoryRepository.save(record);
			return true;
		}
		return false;
	}

	
	public GatewayTestHistory create(GatewayTestHistory record) {
		GatewayTestHistory saved = gatewayTestHistoryRepository.save( record );
		return saved;

	}

	
	public boolean deleteById(String guid) {
		final Optional<GatewayTestHistory> optinalEntity = gatewayTestHistoryRepository.findById(guid);
		if( ! optinalEntity.isPresent() ) {
			return false;
		}

		else {
			gatewayTestHistoryRepository.delete(optinalEntity.get());
			return true;
		}
	}

	
	public boolean delete(GatewayTestHistory record) {
		if(record == null) {
			return false;
		}
		return deleteById( record.getGuid() );

	}

	
	public boolean exists(String guid) {
		return gatewayTestHistoryRepository.findById(guid).isPresent();
	}

	
	public boolean exists(GatewayTestHistory record) {
		return record == null ? false : gatewayTestHistoryRepository.findById(record.getGuid()).isPresent();
	}

}
